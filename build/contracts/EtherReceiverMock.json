{
  "contractName": "EtherReceiverMock",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"acceptEther\",\"type\":\"bool\"}],\"name\":\"setAcceptEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol\":\"EtherReceiverMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol\":{\"keccak256\":\"0x92f4c42268bf430797227fded2dd9ad8d185017c84a4e93490e3a37233398fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ad81859c90a04616b6ecaff67804f1d617b1b0b99c82d00347048847754fef8\",\"dweb:/ipfs/QmY5xrwzFgCFDAVyw8ZSm2Lb1vaNfwEFq5spcMRmbEHZ2d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060cb8061001f6000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b50607760048036036020811015606057600080fd5b810190808035151590602001909291905050506079565b005b806000806101000a81548160ff0219169083151502179055505056fea2646970667358221220c44cd812233c1387ab839d3743bf98d19d3d2fb2b8c1b64b909b3471e12e335a64736f6c63430007050033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b50607760048036036020811015606057600080fd5b810190808035151590602001909291905050506079565b005b806000806101000a81548160ff0219169083151502179055505056fea2646970667358221220c44cd812233c1387ab839d3743bf98d19d3d2fb2b8c1b64b909b3471e12e335a64736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "66:261:69:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "66:261:69:-:0;;;;;;;;;;;;;;;;;;;;;;;272:12;;;;;;;;;;267:52;;300:8;;;267:52;66:261;;;;;131:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;205:11;190:12;;:26;;;;;;;;;;;;;;;;;;131:92;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive () external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n",
  "sourcePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
  "ast": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        7556
      ]
    },
    "id": 7557,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7532,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:69"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7556,
        "linearizedBaseContracts": [
          7556
        ],
        "name": "EtherReceiverMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7534,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nodeType": "VariableDeclaration",
            "scope": 7556,
            "src": "99:25:69",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7533,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "99:4:69",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7543,
              "nodeType": "Block",
              "src": "180:43:69",
              "statements": [
                {
                  "expression": {
                    "id": 7541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7539,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7534,
                      "src": "190:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7540,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7536,
                      "src": "205:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "190:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7542,
                  "nodeType": "ExpressionStatement",
                  "src": "190:26:69"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 7544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "155:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "154:18:69"
            },
            "returnParameters": {
              "id": 7538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "180:0:69"
            },
            "scope": 7556,
            "src": "131:92:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7554,
              "nodeType": "Block",
              "src": "257:68:69",
              "statements": [
                {
                  "condition": {
                    "id": 7548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "271:13:69",
                    "subExpression": {
                      "id": 7547,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7534,
                      "src": "272:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7553,
                  "nodeType": "IfStatement",
                  "src": "267:52:69",
                  "trueBody": {
                    "id": 7552,
                    "nodeType": "Block",
                    "src": "286:33:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7549,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "300:6:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "300:8:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7551,
                        "nodeType": "ExpressionStatement",
                        "src": "300:8:69"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7555,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:69"
            },
            "returnParameters": {
              "id": 7546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:0:69"
            },
            "scope": 7556,
            "src": "229:96:69",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7557,
        "src": "66:261:69"
      }
    ],
    "src": "33:295:69"
  },
  "legacyAST": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        7556
      ]
    },
    "id": 7557,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7532,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:69"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7556,
        "linearizedBaseContracts": [
          7556
        ],
        "name": "EtherReceiverMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7534,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nodeType": "VariableDeclaration",
            "scope": 7556,
            "src": "99:25:69",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7533,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "99:4:69",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7543,
              "nodeType": "Block",
              "src": "180:43:69",
              "statements": [
                {
                  "expression": {
                    "id": 7541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7539,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7534,
                      "src": "190:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7540,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7536,
                      "src": "205:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "190:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7542,
                  "nodeType": "ExpressionStatement",
                  "src": "190:26:69"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 7544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7536,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nodeType": "VariableDeclaration",
                  "scope": 7544,
                  "src": "155:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "154:18:69"
            },
            "returnParameters": {
              "id": 7538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "180:0:69"
            },
            "scope": 7556,
            "src": "131:92:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7554,
              "nodeType": "Block",
              "src": "257:68:69",
              "statements": [
                {
                  "condition": {
                    "id": 7548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "271:13:69",
                    "subExpression": {
                      "id": 7547,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7534,
                      "src": "272:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7553,
                  "nodeType": "IfStatement",
                  "src": "267:52:69",
                  "trueBody": {
                    "id": 7552,
                    "nodeType": "Block",
                    "src": "286:33:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7549,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "300:6:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 7550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "300:8:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7551,
                        "nodeType": "ExpressionStatement",
                        "src": "300:8:69"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7555,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:69"
            },
            "returnParameters": {
              "id": 7546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:0:69"
            },
            "scope": 7556,
            "src": "229:96:69",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7557,
        "src": "66:261:69"
      }
    ],
    "src": "33:295:69"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-13T02:19:18.159Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}