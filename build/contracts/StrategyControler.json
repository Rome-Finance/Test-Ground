{
  "contractName": "StrategyControler",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolToChange",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "nStrategy",
          "type": "address"
        }
      ],
      "name": "startTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolToChange",
          "type": "address"
        }
      ],
      "name": "deployAfterTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolToChange\",\"type\":\"address\"}],\"name\":\"deployAfterTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolToChange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nStrategy\",\"type\":\"address\"}],\"name\":\"startTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/StrategyController.sol\":\"StrategyControler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/IStrategy.sol\":{\"keccak256\":\"0xef5b8a0ca90c79ee1c4123bddcda9c35142a5039cc06b43e91f60bd80a2a1de5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5be047d48b2a82faae503e2c8202c5bdf3cea2364578fdf676dea8f93e63db72\",\"dweb:/ipfs/QmXzvHFpXbMgaV8yN9EZiupHYAtt3TKBo7X4puutf9TWFz\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/Pool.sol\":{\"keccak256\":\"0xffade9a1e9fb3c0348255027938e0420495693aa4d17c22c902cc21add08a3ad\",\"urls\":[\"bzz-raw://3d98e390307a139f6ca356909b16488def5da0aa1be4541a7649fded47cd158a\",\"dweb:/ipfs/Qme9LyipBPGL86dZChEyL3DPYxAYUD8GyhfZ4mPx7FS7ic\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/PoolManager.sol\":{\"keccak256\":\"0xd144c7bec4f9a312702c79b5120c308e7973189aa06b84d8970c5d7e3732381c\",\"urls\":[\"bzz-raw://69600a2de6058f86539d318662f2720b351601c295abef6bb2845828b5856aae\",\"dweb:/ipfs/QmbtXDq9Jt1LFfRnYTvCDjsr4NNPnCCHZFZQ8XRCug6jnP\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/StrategyController.sol\":{\"keccak256\":\"0xc919a9904d39a44d632b20bc332bd6b104bae035528bfc6bd32573617bea1004\",\"urls\":[\"bzz-raw://eac12d0b371cc38a333cdec13326fd5dd3973924e155ff824fc16692f93b53da\",\"dweb:/ipfs/QmVLrBemdrJCYURtGH7ta7o26frfoeHwUmxfzqfn4GiBHA\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x08f0cb43b10dd6652a0563d7b2a4e7bb82e93f877458cd903f1f6d5819ba1252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43ba672ba129548493f0f83547e0c4e6ffd52c0929f10c7a62475abb0a2098ff\",\"dweb:/ipfs/QmbMvf8bavgTRc93bsG3vfxXZ31NSxdp6aSmgJq6nELqC1\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa7eed690cf884882d24eddb742978b8483e361d3a3cc6fa8a8ad04c710222dc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ec3ab9da0cc2ee534e13f5c32f3b0bad60d3637ab58c3b68ed3acb8998054f\",\"dweb:/ipfs/QmSPJzDKHfX9BsKoyFsV2r5SDcrmdV5ds3Kg5LqPNtgdin\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b55380380610b558339818101604052602081101561003357600080fd5b810190808051906020019092919050505060006100546100ff60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508060048190555050610107565b600033905090565b610a3f806101166000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b1461006657806394b3d7241461009a578063c5f11b3a146100fe578063f2fde38b14610142575b600080fd5b610064610186565b005b61006e61030c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fc600480360360408110156100b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610335565b005b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104e3565b005b6101846004803603602081101561015857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610748565b005b61018e610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461024e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61033d610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000829050600082905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061049a6004544261095b90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6104eb610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905042600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610664576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f74696d656c6f636b20686173206e6f742065787069726564000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166333a100ca600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b505050505050565b610750610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610896576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109e46026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000808284019050838110156109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122024a8b9b0b493b661cfa54bc777f548abfe2efad3124a8fca95bdba6501e8575864736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b1461006657806394b3d7241461009a578063c5f11b3a146100fe578063f2fde38b14610142575b600080fd5b610064610186565b005b61006e61030c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100fc600480360360408110156100b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610335565b005b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104e3565b005b6101846004803603602081101561015857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610748565b005b61018e610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461024e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61033d610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000829050600082905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061049a6004544261095b90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b6104eb610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081905042600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610664576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f74696d656c6f636b20686173206e6f742065787069726564000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166333a100ca600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561072c57600080fd5b505af1158015610740573d6000803e3d6000fd5b505050505050565b610750610953565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610896576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109e46026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000808284019050838110156109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122024a8b9b0b493b661cfa54bc777f548abfe2efad3124a8fca95bdba6501e8575864736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "311:1256:6:-:0;;;550:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:17:15;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;607:4:6;594:10;:17;;;;550:69;311:1256;;598:104:132;651:15;685:10;678:17;;598:104;:::o;311:1256:6:-;;;;;;;",
  "deployedSourceMap": "311:1256:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:145:15;;;:::i;:::-;;1085:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;629:449:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1086:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2002:240:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1708:145;1299:12;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:1:::1;1777:40;;1798:6;::::0;::::1;;;;;;;;1777:40;;;;;;;;;;;;1844:1;1827:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1708:145::o:0;1085:77::-;1123:7;1149:6;;;;;;;;;;;1142:13;;1085:77;:::o;629:449:6:-;1299:12:15;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:10:6::1;740:12;722:31;;771:22;806:9;771:45;;858:12;834:14;:21;849:5;834:21;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;969:31;989:10;;969:15;:19;;:31;;;;:::i;:::-;936:23;:30;960:5;936:30;;;;;;;;;;;;;;;:64;;;;1358:1:15;;629:449:6::0;;:::o;1086:470::-;1299:12:15;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:10:6::1;1184:12;1166:31;;1256:15;1223:23;:30;1247:5;1223:30;;;;;;;;;;;;;;;;:48;1215:85;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1378:5;:17;;;1396:14;:21;1411:5;1396:21;;;;;;;;;;;;;;;;;;;;;;;;;1378:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1358:1:15;1086:470:6::0;:::o;2002:240:15:-;1299:12;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:1:::1;2090:22;;:8;:22;;;;2082:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:8;2170:38;;2191:6;::::0;::::1;;;;;;;;2170:38;;;;;;;;;;;;2227:8;2218:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2002:240:::0;:::o;598:104:132:-;651:15;685:10;678:17;;598:104;:::o;882:176:29:-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o",
  "source": "pragma solidity =0.7.5;\r\n\r\n\r\nimport \"./openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./openzeppelin-contracts/contracts/access/Ownable.sol\";\r\nimport \"./PoolManager.sol\";\r\nimport \"./IStrategy.sol\";\r\nimport \"./Pool.sol\";\r\n\r\ncontract StrategyControler is Ownable{\r\n    using SafeMath for uint256;\r\n\r\n    address PoolManager;\r\n\r\n    mapping(Pool => IStrategy) nextStrategies;\r\n    mapping(Pool => uint256) nextStrategyUnlockTimes;\r\n\r\n    uint256 timeToLock;\r\n\r\n    constructor(uint256 time) public {\r\n        timeToLock = time;\r\n    }\r\n\r\n\r\n    function startTimelock(address poolToChange, address nStrategy) external onlyOwner{\r\n        Pool sPool = Pool(poolToChange); //cast\r\n        IStrategy nextStrategy = IStrategy(nStrategy); //cast\r\n        nextStrategies[sPool] = nextStrategy; //set the strategy that can be deployed after timelock\r\n        nextStrategyUnlockTimes[sPool] = block.timestamp.add(timeToLock); //add 1 day of seconds onto the current time to allow unlock in 1 day\r\n    }\r\n\r\n    function deployAfterTimelock(address poolToChange) external onlyOwner{\r\n        Pool sPool = Pool(poolToChange); //cast\r\n        require(nextStrategyUnlockTimes[sPool] < block.timestamp, \"timelock has not expired\"); // require that 24 hours have passed since calling start time lock\r\n        sPool.setStrategy(nextStrategies[sPool]); // call the setStrategy method of the pool, replaces strategy pool uses. Causes unstake and stake of pool to do different stuff\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}",
  "sourcePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/StrategyController.sol",
  "ast": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/StrategyController.sol",
    "exportedSymbols": {
      "Context": [
        16359
      ],
      "ERC20": [
        12548
      ],
      "IERC20": [
        13118
      ],
      "IStrategy": [
        110
      ],
      "Ownable": [
        2679
      ],
      "Pool": [
        576
      ],
      "PoolManager": [
        760
      ],
      "SafeMath": [
        4629
      ],
      "StrategyControler": [
        1006
      ]
    },
    "id": 1007,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 902,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "./openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "id": 903,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 12549,
        "src": "29:66:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "./openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "id": 904,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 13119,
        "src": "97:67:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "./openzeppelin-contracts/contracts/access/Ownable.sol",
        "id": 905,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 2680,
        "src": "166:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/PoolManager.sol",
        "file": "./PoolManager.sol",
        "id": 906,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 761,
        "src": "231:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/IStrategy.sol",
        "file": "./IStrategy.sol",
        "id": 907,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 111,
        "src": "260:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 908,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 577,
        "src": "287:20:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 909,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2679,
              "src": "341:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2679",
                "typeString": "contract Ownable"
              }
            },
            "id": 910,
            "nodeType": "InheritanceSpecifier",
            "src": "341:7:6"
          }
        ],
        "contractDependencies": [
          2679,
          16359
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1006,
        "linearizedBaseContracts": [
          1006,
          2679,
          16359
        ],
        "name": "StrategyControler",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 913,
            "libraryName": {
              "id": 911,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4629,
              "src": "361:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4629",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "355:27:6",
            "typeName": {
              "id": 912,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "374:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 915,
            "mutability": "mutable",
            "name": "PoolManager",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "390:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 914,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "390:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 919,
            "mutability": "mutable",
            "name": "nextStrategies",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "418:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
              "typeString": "mapping(contract Pool => contract IStrategy)"
            },
            "typeName": {
              "id": 918,
              "keyType": {
                "id": 916,
                "name": "Pool",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 576,
                "src": "426:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Pool_$576",
                  "typeString": "contract Pool"
                }
              },
              "nodeType": "Mapping",
              "src": "418:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
                "typeString": "mapping(contract Pool => contract IStrategy)"
              },
              "valueType": {
                "id": 917,
                "name": "IStrategy",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 110,
                "src": "434:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$110",
                  "typeString": "contract IStrategy"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 923,
            "mutability": "mutable",
            "name": "nextStrategyUnlockTimes",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "466:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
              "typeString": "mapping(contract Pool => uint256)"
            },
            "typeName": {
              "id": 922,
              "keyType": {
                "id": 920,
                "name": "Pool",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 576,
                "src": "474:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Pool_$576",
                  "typeString": "contract Pool"
                }
              },
              "nodeType": "Mapping",
              "src": "466:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
                "typeString": "mapping(contract Pool => uint256)"
              },
              "valueType": {
                "id": 921,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 925,
            "mutability": "mutable",
            "name": "timeToLock",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "523:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 924,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "523:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "583:36:6",
              "statements": [
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 930,
                      "name": "timeToLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "594:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "607:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "594:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "594:17:6"
                }
              ]
            },
            "id": 935,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "562:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:14:6"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:6"
            },
            "scope": 1006,
            "src": "550:69:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "711:367:6",
              "statements": [
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "sPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "722:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$576",
                        "typeString": "contract Pool"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 576,
                        "src": "722:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "poolToChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "740:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 946,
                      "name": "Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "735:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Pool_$576_$",
                        "typeString": "type(contract Pool)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$576",
                      "typeString": "contract Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "722:31:6"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "nextStrategy",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "771:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$110",
                        "typeString": "contract IStrategy"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "IStrategy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 110,
                        "src": "771:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$110",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 955,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 953,
                        "name": "nStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "806:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 952,
                      "name": "IStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "796:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStrategy_$110_$",
                        "typeString": "type(contract IStrategy)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$110",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "771:45:6"
                },
                {
                  "expression": {
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 956,
                        "name": "nextStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "834:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
                          "typeString": "mapping(contract Pool => contract IStrategy)"
                        }
                      },
                      "id": 958,
                      "indexExpression": {
                        "id": 957,
                        "name": "sPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "849:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "834:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$110",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 959,
                      "name": "nextStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "858:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$110",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "src": "834:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$110",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "834:36:6"
                },
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 962,
                        "name": "nextStrategyUnlockTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "936:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
                          "typeString": "mapping(contract Pool => uint256)"
                        }
                      },
                      "id": 964,
                      "indexExpression": {
                        "id": 963,
                        "name": "sPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "960:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "936:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 968,
                          "name": "timeToLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "989:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 965,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "969:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "969:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4462,
                        "src": "969:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "969:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "936:64:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "936:64:6"
                }
              ]
            },
            "functionSelector": "94b3d724",
            "id": 973,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 942,
                "modifierName": {
                  "id": 941,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2628,
                  "src": "702:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "702:9:6"
              }
            ],
            "name": "startTimelock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "poolToChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "652:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "nStrategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "674:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "651:41:6"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:6"
            },
            "scope": 1006,
            "src": "629:449:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "1155:401:6",
              "statements": [
                {
                  "assignments": [
                    981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 981,
                      "mutability": "mutable",
                      "name": "sPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 1004,
                      "src": "1166:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$576",
                        "typeString": "contract Pool"
                      },
                      "typeName": {
                        "id": 980,
                        "name": "Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 576,
                        "src": "1166:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 985,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 983,
                        "name": "poolToChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "1184:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 982,
                      "name": "Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1179:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Pool_$576_$",
                        "typeString": "type(contract Pool)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$576",
                      "typeString": "contract Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1166:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 987,
                            "name": "nextStrategyUnlockTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "1223:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
                              "typeString": "mapping(contract Pool => uint256)"
                            }
                          },
                          "id": 989,
                          "indexExpression": {
                            "id": 988,
                            "name": "sPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "1247:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$576",
                              "typeString": "contract Pool"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1223:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 990,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1256:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1256:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1223:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74696d656c6f636b20686173206e6f742065787069726564",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c37ecbe1cfbaf81201c4ebd3a497f6bb6309af2c71356e8a16e4c8a534d63d9f",
                          "typeString": "literal_string \"timelock has not expired\""
                        },
                        "value": "timelock has not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c37ecbe1cfbaf81201c4ebd3a497f6bb6309af2c71356e8a16e4c8a534d63d9f",
                          "typeString": "literal_string \"timelock has not expired\""
                        }
                      ],
                      "id": 986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1215:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:85:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:85:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 999,
                          "name": "nextStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "1396:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
                            "typeString": "mapping(contract Pool => contract IStrategy)"
                          }
                        },
                        "id": 1001,
                        "indexExpression": {
                          "id": 1000,
                          "name": "sPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "1411:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pool_$576",
                            "typeString": "contract Pool"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1396:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$110",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$110",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "expression": {
                        "id": 996,
                        "name": "sPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "1378:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStrategy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "1378:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStrategy_$110_$returns$__$",
                        "typeString": "function (contract IStrategy) external"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:40:6"
                }
              ]
            },
            "functionSelector": "c5f11b3a",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 978,
                "modifierName": {
                  "id": 977,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2628,
                  "src": "1146:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1146:9:6"
              }
            ],
            "name": "deployAfterTimelock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "poolToChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "1115:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:22:6"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:6"
            },
            "scope": 1006,
            "src": "1086:470:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1007,
        "src": "311:1256:6"
      }
    ],
    "src": "0:1567:6"
  },
  "legacyAST": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/StrategyController.sol",
    "exportedSymbols": {
      "Context": [
        16359
      ],
      "ERC20": [
        12548
      ],
      "IERC20": [
        13118
      ],
      "IStrategy": [
        110
      ],
      "Ownable": [
        2679
      ],
      "Pool": [
        576
      ],
      "PoolManager": [
        760
      ],
      "SafeMath": [
        4629
      ],
      "StrategyControler": [
        1006
      ]
    },
    "id": 1007,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 902,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "./openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "id": 903,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 12549,
        "src": "29:66:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "./openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "id": 904,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 13119,
        "src": "97:67:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "./openzeppelin-contracts/contracts/access/Ownable.sol",
        "id": 905,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 2680,
        "src": "166:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/PoolManager.sol",
        "file": "./PoolManager.sol",
        "id": 906,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 761,
        "src": "231:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/IStrategy.sol",
        "file": "./IStrategy.sol",
        "id": 907,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 111,
        "src": "260:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/Pool.sol",
        "file": "./Pool.sol",
        "id": 908,
        "nodeType": "ImportDirective",
        "scope": 1007,
        "sourceUnit": 577,
        "src": "287:20:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 909,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2679,
              "src": "341:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2679",
                "typeString": "contract Ownable"
              }
            },
            "id": 910,
            "nodeType": "InheritanceSpecifier",
            "src": "341:7:6"
          }
        ],
        "contractDependencies": [
          2679,
          16359
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1006,
        "linearizedBaseContracts": [
          1006,
          2679,
          16359
        ],
        "name": "StrategyControler",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 913,
            "libraryName": {
              "id": 911,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4629,
              "src": "361:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4629",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "355:27:6",
            "typeName": {
              "id": 912,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "374:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 915,
            "mutability": "mutable",
            "name": "PoolManager",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "390:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 914,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "390:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 919,
            "mutability": "mutable",
            "name": "nextStrategies",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "418:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
              "typeString": "mapping(contract Pool => contract IStrategy)"
            },
            "typeName": {
              "id": 918,
              "keyType": {
                "id": 916,
                "name": "Pool",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 576,
                "src": "426:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Pool_$576",
                  "typeString": "contract Pool"
                }
              },
              "nodeType": "Mapping",
              "src": "418:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
                "typeString": "mapping(contract Pool => contract IStrategy)"
              },
              "valueType": {
                "id": 917,
                "name": "IStrategy",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 110,
                "src": "434:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IStrategy_$110",
                  "typeString": "contract IStrategy"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 923,
            "mutability": "mutable",
            "name": "nextStrategyUnlockTimes",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "466:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
              "typeString": "mapping(contract Pool => uint256)"
            },
            "typeName": {
              "id": 922,
              "keyType": {
                "id": 920,
                "name": "Pool",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 576,
                "src": "474:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Pool_$576",
                  "typeString": "contract Pool"
                }
              },
              "nodeType": "Mapping",
              "src": "466:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
                "typeString": "mapping(contract Pool => uint256)"
              },
              "valueType": {
                "id": 921,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "482:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 925,
            "mutability": "mutable",
            "name": "timeToLock",
            "nodeType": "VariableDeclaration",
            "scope": 1006,
            "src": "523:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 924,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "523:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 934,
              "nodeType": "Block",
              "src": "583:36:6",
              "statements": [
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 930,
                      "name": "timeToLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "594:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "607:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "594:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "594:17:6"
                }
              ]
            },
            "id": 935,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 935,
                  "src": "562:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "561:14:6"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:6"
            },
            "scope": 1006,
            "src": "550:69:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "711:367:6",
              "statements": [
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "sPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "722:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$576",
                        "typeString": "contract Pool"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 576,
                        "src": "722:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "poolToChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "740:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 946,
                      "name": "Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "735:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Pool_$576_$",
                        "typeString": "type(contract Pool)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$576",
                      "typeString": "contract Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "722:31:6"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "nextStrategy",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "771:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$110",
                        "typeString": "contract IStrategy"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "IStrategy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 110,
                        "src": "771:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$110",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 955,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 953,
                        "name": "nStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "806:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 952,
                      "name": "IStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "796:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStrategy_$110_$",
                        "typeString": "type(contract IStrategy)"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$110",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "771:45:6"
                },
                {
                  "expression": {
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 956,
                        "name": "nextStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "834:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
                          "typeString": "mapping(contract Pool => contract IStrategy)"
                        }
                      },
                      "id": 958,
                      "indexExpression": {
                        "id": 957,
                        "name": "sPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "849:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "834:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$110",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 959,
                      "name": "nextStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "858:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$110",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "src": "834:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$110",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "834:36:6"
                },
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 962,
                        "name": "nextStrategyUnlockTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "936:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
                          "typeString": "mapping(contract Pool => uint256)"
                        }
                      },
                      "id": 964,
                      "indexExpression": {
                        "id": 963,
                        "name": "sPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "960:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "936:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 968,
                          "name": "timeToLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 925,
                          "src": "989:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 965,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "969:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "969:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4462,
                        "src": "969:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "969:31:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "936:64:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "936:64:6"
                }
              ]
            },
            "functionSelector": "94b3d724",
            "id": 973,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 942,
                "modifierName": {
                  "id": 941,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2628,
                  "src": "702:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "702:9:6"
              }
            ],
            "name": "startTimelock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "poolToChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "652:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "652:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "nStrategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "674:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "651:41:6"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:6"
            },
            "scope": 1006,
            "src": "629:449:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "1155:401:6",
              "statements": [
                {
                  "assignments": [
                    981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 981,
                      "mutability": "mutable",
                      "name": "sPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 1004,
                      "src": "1166:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pool_$576",
                        "typeString": "contract Pool"
                      },
                      "typeName": {
                        "id": 980,
                        "name": "Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 576,
                        "src": "1166:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 985,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 983,
                        "name": "poolToChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 975,
                        "src": "1184:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 982,
                      "name": "Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1179:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Pool_$576_$",
                        "typeString": "type(contract Pool)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pool_$576",
                      "typeString": "contract Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1166:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 987,
                            "name": "nextStrategyUnlockTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "1223:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_uint256_$",
                              "typeString": "mapping(contract Pool => uint256)"
                            }
                          },
                          "id": 989,
                          "indexExpression": {
                            "id": 988,
                            "name": "sPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 981,
                            "src": "1247:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pool_$576",
                              "typeString": "contract Pool"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1223:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 990,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1256:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1256:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1223:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74696d656c6f636b20686173206e6f742065787069726564",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c37ecbe1cfbaf81201c4ebd3a497f6bb6309af2c71356e8a16e4c8a534d63d9f",
                          "typeString": "literal_string \"timelock has not expired\""
                        },
                        "value": "timelock has not expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c37ecbe1cfbaf81201c4ebd3a497f6bb6309af2c71356e8a16e4c8a534d63d9f",
                          "typeString": "literal_string \"timelock has not expired\""
                        }
                      ],
                      "id": 986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1215:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:85:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:85:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 999,
                          "name": "nextStrategies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "1396:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Pool_$576_$_t_contract$_IStrategy_$110_$",
                            "typeString": "mapping(contract Pool => contract IStrategy)"
                          }
                        },
                        "id": 1001,
                        "indexExpression": {
                          "id": 1000,
                          "name": "sPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 981,
                          "src": "1411:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pool_$576",
                            "typeString": "contract Pool"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1396:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$110",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$110",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "expression": {
                        "id": 996,
                        "name": "sPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "1378:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pool_$576",
                          "typeString": "contract Pool"
                        }
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStrategy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 262,
                      "src": "1378:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IStrategy_$110_$returns$__$",
                        "typeString": "function (contract IStrategy) external"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1378:40:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:40:6"
                }
              ]
            },
            "functionSelector": "c5f11b3a",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 978,
                "modifierName": {
                  "id": 977,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2628,
                  "src": "1146:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1146:9:6"
              }
            ],
            "name": "deployAfterTimelock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 975,
                  "mutability": "mutable",
                  "name": "poolToChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "1115:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:22:6"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:6"
            },
            "scope": 1006,
            "src": "1086:470:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1007,
        "src": "311:1256:6"
      }
    ],
    "src": "0:1567:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-25T23:00:29.791Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}