{
  "contractName": "UpgradeableBeacon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x08f0cb43b10dd6652a0563d7b2a4e7bb82e93f877458cd903f1f6d5819ba1252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43ba672ba129548493f0f83547e0c4e6ffd52c0929f10c7a62475abb0a2098ff\",\"dweb:/ipfs/QmbMvf8bavgTRc93bsG3vfxXZ31NSxdp6aSmgJq6nELqC1\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/IBeacon.sol\":{\"keccak256\":\"0x77c167740c8227e2569064dabdb2d683800f409743bda1bab8d66d5a2dae3674\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db67aa92e2fa0b00447b469ab9416584024092ff9fd0768d8f2a56b82f90a13a\",\"dweb:/ipfs/QmT39rVeCqKkniTVvPJjgFajmS5QbjE77xgrEVJeAw6VFA\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/UpgradeableBeacon.sol\":{\"keccak256\":\"0x67859b76b173ef7528a8ee445a125f9a7da10a0972107759d9fa64cf9a3ab075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf9ec350a853f3eca7dbe07efd527da34ec4411607637be10ac9983ba600f87\",\"dweb:/ipfs/QmT5ThYLRv96ndZKcRYnGh5q1tY7i4AQt1Co1gkBoQa5Ng\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x67bf2dd5a56395b107ec6ec049d3bc0be559bcd9800c11549fda9603368f4b1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bd95d6f0a8757ca62a39b861b35a3b6e8166fcf8b83cbb65150436821b040e0\",\"dweb:/ipfs/QmbfRNRR6cediYriyFQA4SmXTyj8prML12eNuhsbAZU85Q\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109ad3803806109ad8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461010760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506101018161010f60201b60201c565b506101ce565b600033905090565b610122816101bb60201b6106511760201c565b610177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061097a6033913960400191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b61079d806101dd6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b146100a0578063715018a6146100d45780638da5cb5b146100de578063f2fde38b14610112575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610156565b005b6100a861026d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dc610297565b005b6100e661041d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610446565b005b61015e610664565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461021e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6102278161066c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61029f610664565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461035f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61044e610664565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461050e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061070f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600033905090565b61067581610651565b6106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806107356033913960400191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374a26469706673582212200132141c4323842680ae6eb9f9b579b01040894538523100628e24f6e63e6c8f64736f6c634300070500335570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b146100a0578063715018a6146100d45780638da5cb5b146100de578063f2fde38b14610112575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610156565b005b6100a861026d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dc610297565b005b6100e661041d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610446565b005b61015e610664565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461021e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6102278161066c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61029f610664565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461035f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61044e610664565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461050e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061070f6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600033905090565b61067581610651565b6106ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806107356033913960400191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374a26469706673582212200132141c4323842680ae6eb9f9b579b01040894538523100628e24f6e63e6c8f64736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "475:1487:101:-:0;;;863:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:17:16;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;917:35:101;936:15;917:18;;;:35;;:::i;:::-;863:96;475:1487;;598:104:133;651:15;685:10;678:17;;598:104;:::o;1734:226:101:-;1815:37;1834:17;1815:18;;;;;:37;;:::i;:::-;1807:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:17;1918:15;;:35;;;;;;;;;;;;;;;;;;1734:226;:::o;726:413:131:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;475:1487:101:-;;;;;;;",
  "deployedSourceMap": "475:1487:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1037:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1708:145:16;;;:::i;:::-;;1085:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2002:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1400:159:101;1299:12:16;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1473:37:101::1;1492:17;1473:18;:37::i;:::-;1534:17;1525:27;;;;;;;;;;;;1400:159:::0;:::o;1037:104::-;1093:7;1119:15;;;;;;;;;;;1112:22;;1037:104;:::o;1708:145:16:-;1299:12;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:1:::1;1777:40;;1798:6;::::0;::::1;;;;;;;;1777:40;;;;;;;;;;;;1844:1;1827:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1708:145::o:0;1085:77::-;1123:7;1149:6;;;;;;;;;;;1142:13;;1085:77;:::o;2002:240::-;1299:12;:10;:12::i;:::-;1289:22;;:6;;;;;;;;;;:22;;;1281:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:1:::1;2090:22;;:8;:22;;;;2082:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:8;2170:38;;2191:6;::::0;::::1;;;;;;;;2170:38;;;;;;;;;;;;2227:8;2218:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2002:240:::0;:::o;726:413:131:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;598:104:133:-;651:15;685:10;678:17;;598:104;:::o;1734:226:101:-;1815:37;1834:17;1815:18;:37::i;:::-;1807:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1936:17;1918:15;;:35;;;;;;;;;;;;;;;;;;1734:226;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../access/Ownable.sol\";\nimport \"../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) public {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n",
  "sourcePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/UpgradeableBeacon.sol",
  "ast": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        16517
      ],
      "Context": [
        16625
      ],
      "IBeacon": [
        10269
      ],
      "Ownable": [
        2945
      ],
      "UpgradeableBeacon": [
        10803
      ]
    },
    "id": 10804,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10730,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:101"
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 10731,
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 10270,
        "src": "66:23:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../access/Ownable.sol",
        "id": 10732,
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 2946,
        "src": "90:31:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 10733,
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 16518,
        "src": "122:30:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10735,
              "name": "IBeacon",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10269,
              "src": "505:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBeacon_$10269",
                "typeString": "contract IBeacon"
              }
            },
            "id": 10736,
            "nodeType": "InheritanceSpecifier",
            "src": "505:7:101"
          },
          {
            "baseName": {
              "id": 10737,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2945,
              "src": "514:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2945",
                "typeString": "contract Ownable"
              }
            },
            "id": 10738,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:101"
          }
        ],
        "contractDependencies": [
          2945,
          10269,
          16625
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10734,
          "nodeType": "StructuredDocumentation",
          "src": "154:320:101",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 10803,
        "linearizedBaseContracts": [
          10803,
          2945,
          16625,
          10269
        ],
        "name": "UpgradeableBeacon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10740,
            "mutability": "mutable",
            "name": "_implementation",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "528:31:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10739,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:101",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10741,
              "nodeType": "StructuredDocumentation",
              "src": "566:90:101",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 10745,
            "name": "Upgraded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10743,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10745,
                  "src": "676:30:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "675:32:101"
            },
            "src": "661:47:101"
          },
          {
            "body": {
              "id": 10755,
              "nodeType": "Block",
              "src": "907:52:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10752,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10748,
                        "src": "936:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10751,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10802,
                      "src": "917:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:35:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10754,
                  "nodeType": "ExpressionStatement",
                  "src": "917:35:101"
                }
              ]
            },
            "documentation": {
              "id": 10746,
              "nodeType": "StructuredDocumentation",
              "src": "714:144:101",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 10756,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10748,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 10756,
                  "src": "875:23:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "874:25:101"
            },
            "returnParameters": {
              "id": 10750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:101"
            },
            "scope": 10803,
            "src": "863:96:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10268
            ],
            "body": {
              "id": 10765,
              "nodeType": "Block",
              "src": "1102:39:101",
              "statements": [
                {
                  "expression": {
                    "id": 10763,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10740,
                    "src": "1119:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10762,
                  "id": 10764,
                  "nodeType": "Return",
                  "src": "1112:22:101"
                }
              ]
            },
            "documentation": {
              "id": 10757,
              "nodeType": "StructuredDocumentation",
              "src": "965:67:101",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 10766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10759,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1075:8:101"
            },
            "parameters": {
              "id": 10758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:101"
            },
            "returnParameters": {
              "id": 10762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10761,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10766,
                  "src": "1093:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1092:9:101"
            },
            "scope": 10803,
            "src": "1037:104:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10782,
              "nodeType": "Block",
              "src": "1463:96:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10775,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10769,
                        "src": "1492:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10774,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10802,
                      "src": "1473:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10777,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:37:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10779,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10769,
                        "src": "1534:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10778,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10745,
                      "src": "1525:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:27:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10781,
                  "nodeType": "EmitStatement",
                  "src": "1520:32:101"
                }
              ]
            },
            "documentation": {
              "id": 10767,
              "nodeType": "StructuredDocumentation",
              "src": "1147:248:101",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 10783,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10772,
                "modifierName": {
                  "id": 10771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2894,
                  "src": "1453:9:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1453:9:101"
              }
            ],
            "name": "upgradeTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10769,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10783,
                  "src": "1419:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:27:101"
            },
            "returnParameters": {
              "id": 10773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1463:0:101"
            },
            "scope": 10803,
            "src": "1400:159:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10801,
              "nodeType": "Block",
              "src": "1797:163:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10792,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10786,
                            "src": "1834:17:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10790,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16517,
                            "src": "1815:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$16517_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 10791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16241,
                          "src": "1815:18:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:37:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 10794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1854:53:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 10789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1807:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:101:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10796,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:101:101"
                },
                {
                  "expression": {
                    "id": 10799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10797,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10740,
                      "src": "1918:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10798,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10786,
                      "src": "1936:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1918:35:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10800,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:35:101"
                }
              ]
            },
            "documentation": {
              "id": 10784,
              "nodeType": "StructuredDocumentation",
              "src": "1565:164:101",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 10802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10786,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10802,
                  "src": "1762:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:27:101"
            },
            "returnParameters": {
              "id": 10788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:101"
            },
            "scope": 10803,
            "src": "1734:226:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10804,
        "src": "475:1487:101"
      }
    ],
    "src": "33:1930:101"
  },
  "legacyAST": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        16517
      ],
      "Context": [
        16625
      ],
      "IBeacon": [
        10269
      ],
      "Ownable": [
        2945
      ],
      "UpgradeableBeacon": [
        10803
      ]
    },
    "id": 10804,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10730,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:101"
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/proxy/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 10731,
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 10270,
        "src": "66:23:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../access/Ownable.sol",
        "id": 10732,
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 2946,
        "src": "90:31:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../utils/Address.sol",
        "id": 10733,
        "nodeType": "ImportDirective",
        "scope": 10804,
        "sourceUnit": 16518,
        "src": "122:30:101",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10735,
              "name": "IBeacon",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10269,
              "src": "505:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBeacon_$10269",
                "typeString": "contract IBeacon"
              }
            },
            "id": 10736,
            "nodeType": "InheritanceSpecifier",
            "src": "505:7:101"
          },
          {
            "baseName": {
              "id": 10737,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2945,
              "src": "514:7:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2945",
                "typeString": "contract Ownable"
              }
            },
            "id": 10738,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:101"
          }
        ],
        "contractDependencies": [
          2945,
          10269,
          16625
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 10734,
          "nodeType": "StructuredDocumentation",
          "src": "154:320:101",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 10803,
        "linearizedBaseContracts": [
          10803,
          2945,
          16625,
          10269
        ],
        "name": "UpgradeableBeacon",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10740,
            "mutability": "mutable",
            "name": "_implementation",
            "nodeType": "VariableDeclaration",
            "scope": 10803,
            "src": "528:31:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10739,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:101",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10741,
              "nodeType": "StructuredDocumentation",
              "src": "566:90:101",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 10745,
            "name": "Upgraded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10743,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10745,
                  "src": "676:30:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "675:32:101"
            },
            "src": "661:47:101"
          },
          {
            "body": {
              "id": 10755,
              "nodeType": "Block",
              "src": "907:52:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10752,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10748,
                        "src": "936:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10751,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10802,
                      "src": "917:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:35:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10754,
                  "nodeType": "ExpressionStatement",
                  "src": "917:35:101"
                }
              ]
            },
            "documentation": {
              "id": 10746,
              "nodeType": "StructuredDocumentation",
              "src": "714:144:101",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 10756,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10748,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nodeType": "VariableDeclaration",
                  "scope": 10756,
                  "src": "875:23:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "874:25:101"
            },
            "returnParameters": {
              "id": 10750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:101"
            },
            "scope": 10803,
            "src": "863:96:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10268
            ],
            "body": {
              "id": 10765,
              "nodeType": "Block",
              "src": "1102:39:101",
              "statements": [
                {
                  "expression": {
                    "id": 10763,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10740,
                    "src": "1119:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10762,
                  "id": 10764,
                  "nodeType": "Return",
                  "src": "1112:22:101"
                }
              ]
            },
            "documentation": {
              "id": 10757,
              "nodeType": "StructuredDocumentation",
              "src": "965:67:101",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 10766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10759,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1075:8:101"
            },
            "parameters": {
              "id": 10758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:101"
            },
            "returnParameters": {
              "id": 10762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10761,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10766,
                  "src": "1093:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1092:9:101"
            },
            "scope": 10803,
            "src": "1037:104:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10782,
              "nodeType": "Block",
              "src": "1463:96:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10775,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10769,
                        "src": "1492:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10774,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10802,
                      "src": "1473:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:37:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10777,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:37:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10779,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10769,
                        "src": "1534:17:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10778,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10745,
                      "src": "1525:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1525:27:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10781,
                  "nodeType": "EmitStatement",
                  "src": "1520:32:101"
                }
              ]
            },
            "documentation": {
              "id": 10767,
              "nodeType": "StructuredDocumentation",
              "src": "1147:248:101",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 10783,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10772,
                "modifierName": {
                  "id": 10771,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2894,
                  "src": "1453:9:101",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1453:9:101"
              }
            ],
            "name": "upgradeTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10769,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10783,
                  "src": "1419:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:27:101"
            },
            "returnParameters": {
              "id": 10773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1463:0:101"
            },
            "scope": 10803,
            "src": "1400:159:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10801,
              "nodeType": "Block",
              "src": "1797:163:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10792,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10786,
                            "src": "1834:17:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 10790,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16517,
                            "src": "1815:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$16517_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 10791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16241,
                          "src": "1815:18:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 10793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:37:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 10794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1854:53:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 10789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1807:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:101:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10796,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:101:101"
                },
                {
                  "expression": {
                    "id": 10799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10797,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10740,
                      "src": "1918:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10798,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10786,
                      "src": "1936:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1918:35:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10800,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:35:101"
                }
              ]
            },
            "documentation": {
              "id": 10784,
              "nodeType": "StructuredDocumentation",
              "src": "1565:164:101",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 10802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10786,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 10802,
                  "src": "1762:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:27:101"
            },
            "returnParameters": {
              "id": 10788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:101"
            },
            "scope": 10803,
            "src": "1734:226:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 10804,
        "src": "475:1487:101"
      }
    ],
    "src": "33:1930:101"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-29T02:13:47.700Z",
  "devdoc": {
    "details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation returned by the beacon is changed."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
      },
      "implementation()": {
        "details": "Returns the current implementation address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}