{
  "contractName": "ERC20PermitMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "initialAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol\":\"ERC20PermitMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x94c4719c16ffb96dd3cdc68f6fbf78105153018adbf382241821e8188e6a4bd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33390c907a31dd8961949b0fa1b9557781c81024231f607f6f97b203746ebf60\",\"dweb:/ipfs/QmSdRfWx8tsa2Phm23qtNGTDUek2BphzwyxuqKf3AEszL9\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/drafts/EIP712.sol\":{\"keccak256\":\"0xb4680c014db4af46d818573811ee517b4b669a9fcad1ecbc658ac9a858b55e65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://907a913586115d873933b3881200f95af0bede4beff7821ed3b723a1e7c428a6\",\"dweb:/ipfs/QmYdQjLou6yozSRLpzFD5rSJqXmf1Bj8zHisHFLahebLdv\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/drafts/ERC20Permit.sol\":{\"keccak256\":\"0xc90cba3c177210b35718370bb28c240449725695f2570344fb59470173c00a93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0a3a6d136ac13eac483fcf293331fdefa4f45d385ad74d6c6bb475945dc7a9e\",\"dweb:/ipfs/QmbF2MvAYHYkuj6Li9oVDZzkrdaXah2dXo9XD7eKVxjXmt\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/drafts/IERC20Permit.sol\":{\"keccak256\":\"0x1aab7754719ba764a8a05bec47e975001400f62986474945eb3dbee6d871259f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c14e8ff1b384bdb68f262669364b1e79fbbd82b85938b7ce788a1395c40c6a2\",\"dweb:/ipfs/QmUKLXfSeEuRUXkeWLBhjHTKeSFoNBCS1RaMXv1AmHXYzn\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol\":{\"keccak256\":\"0xd18dcec13f2ce5f518d514fb8fadcd10b8e85dd0b879ff1744c74aefd6bcd191\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a273ac1842aabb15e893360b48935a1bd39af4c2facd48997a4168e1665e0bbb\",\"dweb:/ipfs/QmWzsUtJq3RQCvRHnCTVAtqZc3tc4hHArHYJqfsKQF6kVQ\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa7eed690cf884882d24eddb742978b8483e361d3a3cc6fa8a8ad04c710222dc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ec3ab9da0cc2ee534e13f5c32f3b0bad60d3637ab58c3b68ed3acb8998054f\",\"dweb:/ipfs/QmSPJzDKHfX9BsKoyFsV2r5SDcrmdV5ds3Kg5LqPNtgdin\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]}},\"version\":1}",
  "bytecode": "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120908152506040516200204f3803806200204f833981810160405260808110156200005257600080fd5b81019080805160405193929190846401000000008211156200007357600080fd5b838201915060208201858111156200008a57600080fd5b8251866001820283011164010000000082111715620000a857600080fd5b8083526020830192505050908051906020019080838360005b83811015620000de578082015181840152602081019050620000c1565b50505050905090810190601f1680156200010c5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200013057600080fd5b838201915060208201858111156200014757600080fd5b82518660018202830111640100000000821117156200016557600080fd5b8083526020830192505050908051906020019080838360005b838110156200019b5780820151818401526020810190506200017e565b50505050905090810190601f168015620001c95780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291908051906020019092919050505083806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250868681600390805190602001906200023992919062000605565b5080600490805190602001906200025292919062000605565b506012600560006101000a81548160ff021916908360ff160217905550505060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260c081815250508160e08181525050620002ce6200031a60201b60201c565b60a08181525050620002e88184846200032260201b60201c565b608081815250508061010081815250505050505050506200031082826200039960201b60201c565b50505050620006bb565b600046905090565b6000838383620003376200031a60201b60201c565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000451600083836200057760201b60201c565b6200046d816002546200057c60201b62000df71790919060201c565b600281905550620004cb816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200057c60201b62000df71790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600080828401905083811015620005fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200063d576000855562000689565b82601f106200065857805160ff191683800117855562000689565b8280016001018555821562000689579182015b82811115620006885782518255916020019190600101906200066b565b5b5090506200069891906200069c565b5090565b5b80821115620006b75760008160009055506001016200069d565b5090565b60805160a05160c05160e051610100516101205161194a6200070560003980610b7352508061145d52508061149f52508061147e525080611403525080611432525061194a6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d714610477578063a9059cbb146104db578063d505accf1461053f578063dd62ed3e146105d8576100f5565b806339509351146102e057806370a08231146103445780637ecebe001461039c57806395d89b41146103f4576100f5565b806323b872dd116100d357806323b872dd146101ff578063313ce567146102835780633408e470146102a45780633644e515146102c2576100f5565b806306fdde03146100fa578063095ea7b31461017d57806318160ddd146101e1575b600080fd5b610102610650565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c96004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f2565b60405180821515815260200191505060405180910390f35b6101e9610710565b6040518082815260200191505060405180910390f35b61026b6004803603606081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071a565b60405180821515815260200191505060405180910390f35b61028b6107f3565b604051808260ff16815260200191505060405180910390f35b6102ac61080a565b6040518082815260200191505060405180910390f35b6102ca610812565b6040518082815260200191505060405180910390f35b61032c600480360360408110156102f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610821565b60405180821515815260200191505060405180910390f35b6103866004803603602081101561035a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d4565b6040518082815260200191505060405180910390f35b6103de600480360360208110156103b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091c565b6040518082815260200191505060405180910390f35b6103fc61096c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561043c578082015181840152602081019050610421565b50505050905090810190601f1680156104695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c36004803603604081101561048d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a0e565b60405180821515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610adb565b60405180821515815260200191505060405180910390f35b6105d6600480360360e081101561055557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050610af9565b005b61063a600480360360408110156105ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d70565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e85780601f106106bd576101008083540402835291602001916106e8565b820191906000526020600020905b8154815290600101906020018083116106cb57829003601f168201915b5050505050905090565b60006107066106ff610e7f565b8484610e87565b6001905092915050565b6000600254905090565b600061072784848461107e565b6107e884610733610e7f565b6107e38560405180606001604052806028815260200161187f60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610799610e7f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133f9092919063ffffffff16565b610e87565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600046905090565b600061081c6113ff565b905090565b60006108ca61082e610e7f565b846108c5856001600061083f610e7f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610df790919063ffffffff16565b610e87565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610965600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206114c9565b9050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b5050505050905090565b6000610ad1610a1b610e7f565b84610acc856040518060600160405280602581526020016118f06025913960016000610a45610e7f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133f9092919063ffffffff16565b610e87565b6001905092915050565b6000610aef610ae8610e7f565b848461107e565b6001905092915050565b83421115610b6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332305065726d69743a206578706972656420646561646c696e6500000081525060200191505060405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888610bdc600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206114c9565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000610c5f826114d7565b90506000610c6f8287878761153e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45524332305065726d69743a20696e76616c6964207369676e6174757265000081525060200191505060405180910390fd5b610d59600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061173d565b610d648a8a8a610e87565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610e75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806118cc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117f36022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806118a76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806117d06023913960400191505060405180910390fd5b611195838383611753565b61120081604051806060016040528060268152602001611815602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133f9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611293816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610df790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113b1578082015181840152602081019050611396565b50505050905090810190601f1680156113de5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000061142a611758565b1415611458577f000000000000000000000000000000000000000000000000000000000000000090506114c6565b6114c37f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611760565b90505b90565b600081600001549050919050565b60006114e16113ff565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c11156115bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061183b6022913960400191505060405180910390fd5b601b8460ff1614806115d15750601c8460ff16145b611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061185d6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611682573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45434453413a20696e76616c6964207369676e6174757265000000000000000081525060200191505060405180910390fd5b80915050949350505050565b6001816000016000828254019250508190555050565b505050565b600046905090565b600083838361176d611758565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204ef58f39a53337b1e3a888cc1cb086e59da585aff7f9b35afe41f9190b3154e164736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d714610477578063a9059cbb146104db578063d505accf1461053f578063dd62ed3e146105d8576100f5565b806339509351146102e057806370a08231146103445780637ecebe001461039c57806395d89b41146103f4576100f5565b806323b872dd116100d357806323b872dd146101ff578063313ce567146102835780633408e470146102a45780633644e515146102c2576100f5565b806306fdde03146100fa578063095ea7b31461017d57806318160ddd146101e1575b600080fd5b610102610650565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c96004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f2565b60405180821515815260200191505060405180910390f35b6101e9610710565b6040518082815260200191505060405180910390f35b61026b6004803603606081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071a565b60405180821515815260200191505060405180910390f35b61028b6107f3565b604051808260ff16815260200191505060405180910390f35b6102ac61080a565b6040518082815260200191505060405180910390f35b6102ca610812565b6040518082815260200191505060405180910390f35b61032c600480360360408110156102f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610821565b60405180821515815260200191505060405180910390f35b6103866004803603602081101561035a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d4565b6040518082815260200191505060405180910390f35b6103de600480360360208110156103b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091c565b6040518082815260200191505060405180910390f35b6103fc61096c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561043c578082015181840152602081019050610421565b50505050905090810190601f1680156104695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c36004803603604081101561048d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a0e565b60405180821515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610adb565b60405180821515815260200191505060405180910390f35b6105d6600480360360e081101561055557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050610af9565b005b61063a600480360360408110156105ee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d70565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e85780601f106106bd576101008083540402835291602001916106e8565b820191906000526020600020905b8154815290600101906020018083116106cb57829003601f168201915b5050505050905090565b60006107066106ff610e7f565b8484610e87565b6001905092915050565b6000600254905090565b600061072784848461107e565b6107e884610733610e7f565b6107e38560405180606001604052806028815260200161187f60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610799610e7f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133f9092919063ffffffff16565b610e87565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600046905090565b600061081c6113ff565b905090565b60006108ca61082e610e7f565b846108c5856001600061083f610e7f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610df790919063ffffffff16565b610e87565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610965600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206114c9565b9050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b5050505050905090565b6000610ad1610a1b610e7f565b84610acc856040518060600160405280602581526020016118f06025913960016000610a45610e7f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133f9092919063ffffffff16565b610e87565b6001905092915050565b6000610aef610ae8610e7f565b848461107e565b6001905092915050565b83421115610b6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f45524332305065726d69743a206578706972656420646561646c696e6500000081525060200191505060405180910390fd5b60007f0000000000000000000000000000000000000000000000000000000000000000888888610bdc600660008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206114c9565b89604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012090506000610c5f826114d7565b90506000610c6f8287878761153e565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45524332305065726d69743a20696e76616c6964207369676e6174757265000081525060200191505060405180910390fd5b610d59600660008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061173d565b610d648a8a8a610e87565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610e75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806118cc6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117f36022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806118a76025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806117d06023913960400191505060405180910390fd5b611195838383611753565b61120081604051806060016040528060268152602001611815602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133f9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611293816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610df790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113b1578082015181840152602081019050611396565b50505050905090810190601f1680156113de5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60007f000000000000000000000000000000000000000000000000000000000000000061142a611758565b1415611458577f000000000000000000000000000000000000000000000000000000000000000090506114c6565b6114c37f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611760565b90505b90565b600081600001549050919050565b60006114e16113ff565b8260405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08260001c11156115bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061183b6022913960400191505060405180910390fd5b601b8460ff1614806115d15750601c8460ff16145b611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061185d6022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015611682573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f45434453413a20696e76616c6964207369676e6174757265000000000000000081525060200191505060405180910390fd5b80915050949350505050565b6001816000016000828254019250508190555050565b505050565b600046905090565b600083838361176d611758565b30604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001209050939250505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c756545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212204ef58f39a53337b1e3a888cc1cb086e59da585aff7f9b35afe41f9190b3154e164736f6c63430007050033",
  "immutableReferences": {
    "4046": [
      {
        "length": 32,
        "start": 5170
      }
    ],
    "4048": [
      {
        "length": 32,
        "start": 5123
      }
    ],
    "4050": [
      {
        "length": 32,
        "start": 5246
      }
    ],
    "4052": [
      {
        "length": 32,
        "start": 5279
      }
    ],
    "4054": [
      {
        "length": 32,
        "start": 5213
      }
    ],
    "4216": [
      {
        "length": 32,
        "start": 2931
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "103:622:60:-:0;;;976:95:22;931:140;;;;;149:248:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;337:4;1351::22;2294:552:21;;;;;;;;;;;;;;;;;311:4:60;317:6;2040:5:112;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;2368:18:21;2405:4;2389:22;;;;;;2368:43;;2421:21;2461:7;2445:25;;;;;;2421:49;;2480:16;2499:95;2480:114;;2620:10;2605:25;;;;;;2658:13;2640:31;;;;;;2700:13;:11;;;:13;;:::i;:::-;2681:32;;;;;;2750:58;2772:8;2782:10;2794:13;2750:21;;;:58;;:::i;:::-;2723:85;;;;;;2831:8;2818:21;;;;;;2294:552;;;;;1303:66:22;353:37:60::2;359:14;375;353:5;;;:37;;:::i;:::-;149:248:::0;;;;103:622;;4346:320:21;4391:15;4641:9;4630:20;;4616:44;:::o;3213:327::-;3315:7;3392:8;3418:4;3440:7;3465:13;:11;;;:13;;:::i;:::-;3504:4;3364:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:192;;;;;;3334:199;;3213:327;;;;;:::o;7792:370:112:-;7894:1;7875:21;;:7;:21;;;;7867:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7943:49;7972:1;7976:7;7985:6;7943:20;;;:49;;:::i;:::-;8018:24;8035:6;8018:12;;:16;;;;;;:24;;;;:::i;:::-;8003:12;:39;;;;8073:30;8096:6;8073:9;:18;8083:7;8073:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8052:9;:18;8062:7;8052:18;;;;;;;;;;;;;;;:51;;;;8139:7;8118:37;;8135:1;8118:37;;;8148:6;8118:37;;;;;;;;;;;;;;;;;;7792:370;;:::o;10653:92::-;;;;:::o;882:176:31:-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o;103:622:60:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "103:622:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:81:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4204:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3211:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4837:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3070:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;403:320:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2527:113:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5549:215:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3367:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2285:118:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2362:85:112;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6251:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3687:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1430:794:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3917:149:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:81;2205:13;2237:5;2230:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:81;:::o;4204:166::-;4287:4;4303:39;4312:12;:10;:12::i;:::-;4326:7;4335:6;4303:8;:39::i;:::-;4359:4;4352:11;;4204:166;;;;:::o;3211:98::-;3264:7;3290:12;;3283:19;;3211:98;:::o;4837:317::-;4943:4;4959:36;4969:6;4977:9;4988:6;4959:9;:36::i;:::-;5005:121;5014:6;5022:12;:10;:12::i;:::-;5036:89;5074:6;5036:89;;;;;;;;;;;;;;;;;:11;:19;5048:6;5036:19;;;;;;;;;;;;;;;:33;5056:12;:10;:12::i;:::-;5036:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5005:8;:121::i;:::-;5143:4;5136:11;;4837:317;;;;;:::o;3070:81::-;3111:5;3135:9;;;;;;;;;;;3128:16;;3070:81;:::o;403:320:60:-;448:15;698:9;687:20;;673:44;:::o;2527:113:22:-;2587:7;2613:20;:18;:20::i;:::-;2606:27;;2527:113;:::o;5549:215:112:-;5637:4;5653:83;5662:12;:10;:12::i;:::-;5676:7;5685:50;5724:10;5685:11;:25;5697:12;:10;:12::i;:::-;5685:25;;;;;;;;;;;;;;;:34;5711:7;5685:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5653:8;:83::i;:::-;5753:4;5746:11;;5549:215;;;;:::o;3367:117::-;3433:7;3459:9;:18;3469:7;3459:18;;;;;;;;;;;;;;;;3452:25;;3367:117;;;:::o;2285:118:22:-;2346:7;2372:24;:7;:14;2380:5;2372:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2365:31;;2285:118;;;:::o;2362:85:112:-;2401:13;2433:7;2426:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:85;:::o;6251:266::-;6344:4;6360:129;6369:12;:10;:12::i;:::-;6383:7;6392:96;6431:15;6392:96;;;;;;;;;;;;;;;;;:11;:25;6404:12;:10;:12::i;:::-;6392:25;;;;;;;;;;;;;;;:34;6418:7;6392:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6360:8;:129::i;:::-;6506:4;6499:11;;6251:266;;;;:::o;3687:172::-;3773:4;3789:42;3799:12;:10;:12::i;:::-;3813:9;3824:6;3789:9;:42::i;:::-;3848:4;3841:11;;3687:172;;;;:::o;1430:794:22:-;1657:8;1638:15;:27;;1630:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:18;1782:16;1816:5;1839:7;1864:5;1887:24;:7;:14;1895:5;1887:14;;;;;;;;;;;;;;;:22;:24::i;:::-;1929:8;1754:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:230;;;;;;1710:251;;1972:12;1987:28;2004:10;1987:16;:28::i;:::-;1972:43;;2026:14;2043:28;2057:4;2063:1;2066;2069;2043:13;:28::i;:::-;2026:45;;2099:5;2089:15;;:6;:15;;;2081:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:26;:7;:14;2158:5;2150:14;;;;;;;;;;;;;;;:24;:26::i;:::-;2186:31;2195:5;2202:7;2211:5;2186:8;:31::i;:::-;1430:794;;;;;;;;;;:::o;3917:149:112:-;4006:7;4032:11;:18;4044:5;4032:18;;;;;;;;;;;;;;;:27;4051:7;4032:27;;;;;;;;;;;;;;;;4025:34;;3917:149;;;;:::o;882:176:31:-;940:7;959:9;975:1;971;:5;959:17;;999:1;994;:6;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;1043:8;;;882:176;;;;:::o;598:104:134:-;651:15;685:10;678:17;;598:104;:::o;9315:340:112:-;9433:1;9416:19;;:5;:19;;;;9408:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9513:1;9494:21;;:7;:21;;;;9486:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9595:6;9565:11;:18;9577:5;9565:18;;;;;;;;;;;;;;;:27;9584:7;9565:27;;;;;;;;;;;;;;;:36;;;;9632:7;9616:32;;9625:5;9616:32;;;9641:6;9616:32;;;;;;;;;;;;;;;;;;9315:340;;;:::o;6991:530::-;7114:1;7096:20;;:6;:20;;;;7088:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7197:1;7176:23;;:9;:23;;;;7168:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7250:47;7271:6;7279:9;7290:6;7250:20;:47::i;:::-;7328:71;7350:6;7328:71;;;;;;;;;;;;;;;;;:9;:17;7338:6;7328:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7308:9;:17;7318:6;7308:17;;;;;;;;;;;;;;;:91;;;;7432:32;7457:6;7432:9;:20;7442:9;7432:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7409:9;:20;7419:9;7409:20;;;;;;;;;;;;;;;:55;;;;7496:9;7479:35;;7488:6;7479:35;;;7507:6;7479:35;;;;;;;;;;;;;;;;;;6991:530;;;:::o;1754:187:31:-;1840:7;1872:1;1867;:6;;1875:12;1859:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:9;1914:1;1910;:5;1898:17;;1933:1;1926:8;;;1754:187;;;;;:::o;2932:275:21:-;2985:7;3025:16;3008:13;:11;:13::i;:::-;:33;3004:197;;;3064:24;3057:31;;;;3004:197;3126:64;3148:10;3160:12;3174:15;3126:21;:64::i;:::-;3119:71;;2932:275;;:::o;1106:112:135:-;1171:7;1197;:14;;;1190:21;;1106:112;;;:::o;4165:175:21:-;4234:7;4299:20;:18;:20::i;:::-;4321:10;4270:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4260:73;;;;;;4253:80;;4165:175;;;:::o;1960:1414:19:-;2045:7;2960:66;2954:1;2946:10;;:80;;2938:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3088:2;3083:1;:7;;;:18;;;;3099:2;3094:1;:7;;;3083:18;3075:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:14;3252:24;3262:4;3268:1;3271;3274;3252:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3235:41;;3312:1;3294:20;;:6;:20;;;;3286:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3361:6;3354:13;;;1960:1414;;;;;;:::o;1224:178:135:-;1394:1;1376:7;:14;;;:19;;;;;;;;;;;1224:178;:::o;10653:92:112:-;;;;:::o;4346:320:21:-;4391:15;4641:9;4630:20;;4616:44;:::o;3213:327::-;3315:7;3392:8;3418:4;3440:7;3465:13;:11;:13::i;:::-;3504:4;3364:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:192;;;;;;3334:199;;3213:327;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../drafts/ERC20Permit.sol\";\n\ncontract ERC20PermitMock is ERC20Permit {\n    constructor (\n        string memory name,\n        string memory symbol,\n        address initialAccount,\n        uint256 initialBalance\n    ) public payable ERC20(name, symbol) ERC20Permit(name) {\n        _mint(initialAccount, initialBalance);\n    }\n\n    function getChainId() external view returns (uint256 chainId) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            chainId := chainid()\n        }\n    }\n}\n",
  "sourcePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol",
  "ast": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol",
    "exportedSymbols": {
      "Context": [
        16778
      ],
      "Counters": [
        16828
      ],
      "ECDSA": [
        3970
      ],
      "EIP712": [
        4190
      ],
      "ERC20": [
        12967
      ],
      "ERC20Permit": [
        4336
      ],
      "ERC20PermitMock": [
        6832
      ],
      "IERC20": [
        13537
      ],
      "IERC20Permit": [
        4372
      ],
      "SafeMath": [
        5048
      ]
    },
    "id": 6833,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6795,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:60"
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/drafts/ERC20Permit.sol",
        "file": "../drafts/ERC20Permit.sol",
        "id": 6796,
        "nodeType": "ImportDirective",
        "scope": 6833,
        "sourceUnit": 4337,
        "src": "66:35:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6797,
              "name": "ERC20Permit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4336,
              "src": "131:11:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Permit_$4336",
                "typeString": "contract ERC20Permit"
              }
            },
            "id": 6798,
            "nodeType": "InheritanceSpecifier",
            "src": "131:11:60"
          }
        ],
        "contractDependencies": [
          4190,
          4336,
          4372,
          12967,
          13537,
          16778
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6832,
        "linearizedBaseContracts": [
          6832,
          4336,
          4190,
          4372,
          12967,
          13537,
          16778
        ],
        "name": "ERC20PermitMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6821,
              "nodeType": "Block",
              "src": "343:54:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6817,
                        "name": "initialAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "359:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6818,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "375:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6816,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12843,
                      "src": "353:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "353:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6820,
                  "nodeType": "ExpressionStatement",
                  "src": "353:37:60"
                }
              ]
            },
            "id": 6822,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6809,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6800,
                    "src": "311:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6810,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6802,
                    "src": "317:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6811,
                "modifierName": {
                  "id": 6808,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12967,
                  "src": "305:5:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$12967_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "305:19:60"
              },
              {
                "arguments": [
                  {
                    "id": 6813,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6800,
                    "src": "337:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6814,
                "modifierName": {
                  "id": 6812,
                  "name": "ERC20Permit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4336,
                  "src": "325:11:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$4336_$",
                    "typeString": "type(contract ERC20Permit)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "325:17:60"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6800,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "171:18:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6799,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6802,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "199:20:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6801,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6804,
                  "mutability": "mutable",
                  "name": "initialAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "229:22:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6806,
                  "mutability": "mutable",
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "261:22:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "161:128:60"
            },
            "returnParameters": {
              "id": 6815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:60"
            },
            "scope": 6832,
            "src": "149:248:60",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6830,
              "nodeType": "Block",
              "src": "465:258:60",
              "statements": [
                {
                  "expression": {
                    "id": 6827,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "475:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20PermitMock_$6832",
                      "typeString": "contract ERC20PermitMock"
                    }
                  },
                  "id": 6828,
                  "nodeType": "ExpressionStatement",
                  "src": "475:4:60"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "673:44:60",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "687:20:60",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "698:7:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "698:9:60"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "687:7:60"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6825,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "687:7:60",
                      "valueSize": 1
                    }
                  ],
                  "id": 6829,
                  "nodeType": "InlineAssembly",
                  "src": "664:53:60"
                }
              ]
            },
            "functionSelector": "3408e470",
            "id": 6831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:60"
            },
            "returnParameters": {
              "id": 6826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6825,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6831,
                  "src": "448:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:17:60"
            },
            "scope": 6832,
            "src": "403:320:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6833,
        "src": "103:622:60"
      }
    ],
    "src": "33:693:60"
  },
  "legacyAST": {
    "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol",
    "exportedSymbols": {
      "Context": [
        16778
      ],
      "Counters": [
        16828
      ],
      "ECDSA": [
        3970
      ],
      "EIP712": [
        4190
      ],
      "ERC20": [
        12967
      ],
      "ERC20Permit": [
        4336
      ],
      "ERC20PermitMock": [
        6832
      ],
      "IERC20": [
        13537
      ],
      "IERC20Permit": [
        4372
      ],
      "SafeMath": [
        5048
      ]
    },
    "id": 6833,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6795,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:60"
      },
      {
        "absolutePath": "/home/darkdark/block_projs/rome_stuff/Test-Ground.io/contracts/openzeppelin-contracts/contracts/drafts/ERC20Permit.sol",
        "file": "../drafts/ERC20Permit.sol",
        "id": 6796,
        "nodeType": "ImportDirective",
        "scope": 6833,
        "sourceUnit": 4337,
        "src": "66:35:60",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6797,
              "name": "ERC20Permit",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4336,
              "src": "131:11:60",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Permit_$4336",
                "typeString": "contract ERC20Permit"
              }
            },
            "id": 6798,
            "nodeType": "InheritanceSpecifier",
            "src": "131:11:60"
          }
        ],
        "contractDependencies": [
          4190,
          4336,
          4372,
          12967,
          13537,
          16778
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6832,
        "linearizedBaseContracts": [
          6832,
          4336,
          4190,
          4372,
          12967,
          13537,
          16778
        ],
        "name": "ERC20PermitMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6821,
              "nodeType": "Block",
              "src": "343:54:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6817,
                        "name": "initialAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6804,
                        "src": "359:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6818,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6806,
                        "src": "375:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6816,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12843,
                      "src": "353:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "353:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6820,
                  "nodeType": "ExpressionStatement",
                  "src": "353:37:60"
                }
              ]
            },
            "id": 6822,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6809,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6800,
                    "src": "311:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6810,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6802,
                    "src": "317:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6811,
                "modifierName": {
                  "id": 6808,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 12967,
                  "src": "305:5:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$12967_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "305:19:60"
              },
              {
                "arguments": [
                  {
                    "id": 6813,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6800,
                    "src": "337:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6814,
                "modifierName": {
                  "id": 6812,
                  "name": "ERC20Permit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4336,
                  "src": "325:11:60",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Permit_$4336_$",
                    "typeString": "type(contract ERC20Permit)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "325:17:60"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6800,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "171:18:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6799,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6802,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "199:20:60",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6801,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:6:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6804,
                  "mutability": "mutable",
                  "name": "initialAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "229:22:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6806,
                  "mutability": "mutable",
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 6822,
                  "src": "261:22:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "161:128:60"
            },
            "returnParameters": {
              "id": 6815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:60"
            },
            "scope": 6832,
            "src": "149:248:60",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6830,
              "nodeType": "Block",
              "src": "465:258:60",
              "statements": [
                {
                  "expression": {
                    "id": 6827,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "475:4:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20PermitMock_$6832",
                      "typeString": "contract ERC20PermitMock"
                    }
                  },
                  "id": 6828,
                  "nodeType": "ExpressionStatement",
                  "src": "475:4:60"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "673:44:60",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "687:20:60",
                        "value": {
                          "arguments": [],
                          "functionName": {
                            "name": "chainid",
                            "nodeType": "YulIdentifier",
                            "src": "698:7:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "698:9:60"
                        },
                        "variableNames": [
                          {
                            "name": "chainId",
                            "nodeType": "YulIdentifier",
                            "src": "687:7:60"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 6825,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "687:7:60",
                      "valueSize": 1
                    }
                  ],
                  "id": 6829,
                  "nodeType": "InlineAssembly",
                  "src": "664:53:60"
                }
              ]
            },
            "functionSelector": "3408e470",
            "id": 6831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:60"
            },
            "returnParameters": {
              "id": 6826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6825,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6831,
                  "src": "448:15:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:17:60"
            },
            "scope": 6832,
            "src": "403:320:60",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6833,
        "src": "103:622:60"
      }
    ],
    "src": "33:693:60"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-30T22:26:31.079Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "details": "See {IERC20Permit-nonces}."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "See {IERC20Permit-permit}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}