[{"/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Invest.js":"1","/home/darkdark/block_projs/Test-Ground/test_interface/src/About.js":"2","/home/darkdark/block_projs/Test-Ground/test_interface/src/App.js":"3","/home/darkdark/block_projs/Test-Ground/test_interface/src/Rome.js":"4","/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Liquidate.js":"5","/home/darkdark/block_projs/Test-Ground/test_interface/src/index.js":"6","/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Dashboard.js":"7","/home/darkdark/block_projs/Test-Ground/test_interface/src/reportWebVitals.js":"8","/home/darkdark/block_projs/Test-Ground/test_interface/src/Landing.js":"9","/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Navigation.js":"10","/home/darkdark/block_projs/Test-Ground/test_interface/src/Pools.js":"11","/home/darkdark/block_projs/Test-Ground/test_interface/src/Mushroom.js":"12"},{"size":6167,"mtime":1606204382964,"results":"13","hashOfConfig":"14"},{"size":1832,"mtime":1606956782398,"results":"15","hashOfConfig":"14"},{"size":2939,"mtime":1606203102997,"results":"16","hashOfConfig":"14"},{"size":8349,"mtime":1606250354082,"results":"17","hashOfConfig":"14"},{"size":3989,"mtime":1606288756321,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1606203103021,"results":"19","hashOfConfig":"14"},{"size":4789,"mtime":1606434900308,"results":"20","hashOfConfig":"14"},{"size":362,"mtime":1606203103037,"results":"21","hashOfConfig":"14"},{"size":5914,"mtime":1606956603333,"results":"22","hashOfConfig":"14"},{"size":283,"mtime":1606957179271,"results":"23","hashOfConfig":"14"},{"size":1701,"mtime":1607126065806,"results":"24","hashOfConfig":"14"},{"size":12199,"mtime":1606206154857,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"svof1w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Invest.js",["57","58","59"],"import React, { Component } from \"react\";\r\nimport web3 from \"../web3\"\r\nimport {Card, Form} from \"semantic-ui-react\";\r\nimport Mushroom from \"../Mushroom\";\r\nimport Rome from \"../Rome\";\r\n//import Card from 'react-bootstrap/Card'\r\n//import Box from '@material-ui/core/Box';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nfunction callBack(err, result) {\r\n    console.warn(result);\r\n}\r\n\r\nclass Invest extends Component{\r\n\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            amount : 0,\r\n            waitingOnContract: false\r\n        };\r\n\r\n        //have to bind functions to this. still dont know why after all these projects lmao,\r\n        //but dont forget it or things break!\r\n        this.ButtonText = this.ButtonText.bind(this);\r\n        /*\r\n        Do not call the update function in the constructor. Only the render function is called when the\r\n        parent tells child to rerender, so anything in the constructor will not be called again.\r\n         */\r\n\r\n    }\r\n\r\n\r\n\r\n    invest = async event =>{\r\n        console.log(\"EYYYYYY\");\r\n\r\n        event.preventDefault();\r\n        try {\r\n            var accounts;\r\n\r\n            this.props.UpdateWaitingOnContract(true);\r\n\r\n            await web3.eth.getAccounts().then(function(acc){ accounts = acc })\r\n\r\n            console.log(accounts[0]);\r\n\r\n            //const batch = new web3.eth.BatchRequest();\r\n\r\n            const weiValue = web3.utils.toWei(this.state.amount, 'ether');\r\n\r\n            /*\r\n            ------------------------------------------------------------------------------------------\r\n            theres a lot of commented out code in this section, but im leaving it because\r\n            it is a working example of how to use web3 batches correctly, and I might need that later\r\n            ------------------------------------------------------------------------------------------\r\n             */\r\n\r\n            /*\r\n            batch.add(Rome.methods.approve(Mushroom.options.address, weiValue).send.request({from: accounts[0]}, callBack));\r\n            batch.add(Mushroom.methods.stake(weiValue).send.request({from: accounts[0]}, callBack));\r\n            */\r\n\r\n            await Rome.methods.approve(Mushroom.options.address, weiValue).send({from: accounts[0]});\r\n            await Mushroom.methods.stake(weiValue).send({from: accounts[0]});\r\n\r\n\r\n\r\n            /*\r\n            .call(from:accounts[0]))\r\n            batch.add(Mushroom.methods\r\n                .mint(this.state.amount) // contains the user account name\r\n                .send({\r\n                    from: accounts[0]\r\n                }));\r\n\r\n             */\r\n            // batches let you put more than one transaction together to be processed at one\r\n            // need them for approve transfer, then transferfrom when using erc tokens\r\n            //await batch.execute();\r\n\r\n            this.props.UpdateWaitingOnContract(false);\r\n\r\n            this.props.Update();\r\n\r\n        } catch (err) {\r\n            console.log(\"ERROR IN SENDING TO CHAIN \" + err);\r\n            this.props.UpdateWaitingOnContract(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /*\r\n    Dynamically render the button to have different text on it when the contract is waiting for transactions to come back\r\n\r\n    this function returns a div, which allows it to be passed as a component, and for me to type in words without a string\r\n    could maybe do the same thing without div and passing a literal string, then dealing with string in render,\r\n    but this way seems to look a feel cleaner\r\n     */\r\n    ButtonText() {\r\n        if (this.props.waitingOnContract) {\r\n            return <div>Waiting on Transactions.............</div>;\r\n        }\r\n        return <div>Invest Tokens</div>;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        /*\r\n        Anything that needs to happen every rerender need to get called here before the return!!!\r\n         */\r\n        return(\r\n            <div>\r\n                <Card style={{\r\n                    backgroundColor: '#fd00ff'\r\n                }}>\r\n\r\n\r\n                    <h4 style={{ color: 'Black', fluid: false }}>Invest USDC</h4 >\r\n                    {/*\r\n                     Form that updates a value in order for the chain call function to know how much\r\n                     to put into the invest function of the contract when its called later on the button press\r\n\r\n                     uses an event because the event will contain what value the text box's contents just changed to\r\n                     I think it makes it faster or something. Could maybe do it with just using the value of\r\n                     the text box input and throwing it into onchange without the event?\r\n                     Maybe the only way to get the value out is with event? Maybe just fancy pants programmer code\r\n                     back from jordan in ecocap that doesnt need to be that complex?\r\n\r\n                    */}\r\n                    <Form.Field >\r\n                        <input\r\n                            style={{width:'80%'}}\r\n                            placeholder=\"How many USDC tokens would you like to invest?\"\r\n                            onChange={event =>\r\n                                this.setState({\r\n                                    amount: event.target.value\r\n                                })\r\n                            }\r\n                        />\r\n                    </Form.Field>\r\n                    <br/>\r\n                    <h4 style={{ color: 'Black', margin: 0, }} align=\"center\">   Tokens will be used for investments and you will get MUSH tokens based on your share of the investment pool. (Approve Both Transactions)</h4>\r\n                    <br/>\r\n                    {/*\r\n                     Button that calls function to send invest transactions to chain\r\n                    */}\r\n                    <button id={'setLocation'} className={'btn btn-md btn-success'} disabled={this.props.waitingOnContract} style={{color:'black'}} onClick={this.invest}>\r\n                        <span>{this.ButtonText()}</span>\r\n                    </button>\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default Invest;\r\n","/home/darkdark/block_projs/Test-Ground/test_interface/src/About.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport web3 from \"./web3\";\r\nimport Invest from \"./components/Invest\";\r\nimport Liquidate from \"./components/Liquidate\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card, Form} from \"semantic-ui-react\";\r\nimport {Component, React, Text} from \"react\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Mushroom from \"./Mushroom\";\r\nimport Rome from \"./Rome\";\r\nimport { flexbox } from '@material-ui/system';\r\nimport Box from '@material-ui/core/Box';\r\nimport colosseum from './resources/colosseum.jpg';\r\n\r\n\r\n//here and not in style sheet because css doesnt like text-shadow 33cd0c 35FFEC\r\nconst radiantWhite = {color: 'white', margin: 0, 'text-shadow': '0px 0px 2px #35FFEC'}\r\n\r\n\r\nclass About extends Component{\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //set mushroom forest background, make it fill screen\r\n            <div className=\"App\" style={{\r\n                backgroundImage: `url(${colosseum})`,\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}>\r\n                <header className=\"App-header\" style={{\r\n                    backgroundColor: 'transparent'\r\n                }}>\r\n                    <br/><br/><br/><br/>\r\n                    <h1 style={radiantWhite}> {/* neat white text with blue fading outline */}\r\n                        Welcome to Rome Finance\r\n                        <br/>\r\n                        Join the Empire\r\n                    </h1>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;",["76","77"],"/home/darkdark/block_projs/Test-Ground/test_interface/src/App.js",["78"],"import React, { Component } from 'react';\nimport {BrowserRouter, NavLink, Route, Switch} from 'react-router-dom';\n\nimport Landing from './Landing';\nimport About from './About';\nimport Pools from './Pools';\nimport Navigation from './components/Navigation';\nimport Card from \"react-bootstrap/Card\";\nimport Rome_Cover from \"./resources/Rome-cover.png\";\n\n/*\nrome color hexes.\n#990000 - red\n#D4AF37 - yellow\n */\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\" style={{\n                    backgroundImage: `url(${Rome_Cover})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'contain',\n                    backgroundRepeat: 'no-repeat'\n                }}>\n                    <header style={{\n                        backgroundColor: 'transparent',\n                        'min-height': '33vh'\n                    }}> {/* vh stands for viewpoint height. Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm.*/}\n                    </header>\n                </div>\n                <div>\n                    <Card style={{\n                        backgroundColor: 'black',\n                        'flex-direction': 'row',\n                        alignItems: \"center\",\n                        display: \"flex\"\n                    }}> {/* 'flex-direction': 'row' fixes all the problems I've been having! put this on components\n                            in order to make them align horizontally before vertically. Its built into CSS and doesnt\n                            even need to go as high level as react! works on most components\n                             https://css-tricks.com/snippets/css/a-guide-to-flexbox/*/}\n                        <Card style={{\n                            backgroundColor: '#990000',\n                        }}>\n                            <NavLink to=\"/\" style={{color: '#D4AF37'}}>Home</NavLink>\n                        </Card>\n                        <Card style={{\n                            backgroundColor: '#990000',\n                        }}>\n                            <NavLink to=\"/about\" style={{color: '#D4AF37'}}>About</NavLink>\n                        </Card>\n                        <Card style={{\n                            backgroundColor: '#990000',\n                        }}>\n                            <NavLink to=\"/pools\" style={{color: '#D4AF37'}}>Pools</NavLink>\n                        </Card>\n                    </Card>\n                    <Switch>\n                        <Route path=\"/\" component={Landing} exact/>\n                        <Route path=\"/about\" component={About}/>\n                        <Route path=\"/pools\" component={Pools}/>\n                    </Switch>\n                    {/*<Route path=\"/stake\" component={Stake}/>}*/}\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;","/home/darkdark/block_projs/Test-Ground/test_interface/src/Rome.js",[],["79","80"],"/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Liquidate.js",["81"],"/home/darkdark/block_projs/Test-Ground/test_interface/src/index.js",[],"/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Dashboard.js",["82","83","84","85","86","87","88","89"],"/home/darkdark/block_projs/Test-Ground/test_interface/src/reportWebVitals.js",[],"/home/darkdark/block_projs/Test-Ground/test_interface/src/Landing.js",["90","91","92","93","94"],"\nimport './App.css';\nimport web3 from \"./web3\";\nimport Invest from \"./components/Invest\";\nimport Liquidate from \"./components/Liquidate\";\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Card, Form} from \"semantic-ui-react\";\nimport {Component, React, Text} from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport Mushroom from \"./Mushroom\";\nimport Rome from \"./Rome\";\nimport { flexbox } from '@material-ui/system';\nimport Box from '@material-ui/core/Box';\n//import colosseum from './resources/colosseum.jpg';\nimport statue from './resources/statue.jpg';\n\n\n\n\n//here and not in style sheet because css doesnt like text-shadow 33cd0c 35FFEC\nconst radiantWhite = {color: 'white', margin: 0, 'text-shadow': '0px 0px 2px #35FFEC'}\n\n\nclass Landing extends Component{\n\n\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            waitingOnContract: false,\n            TotalMush : 0,\n            TotalUsdc: 0,\n            EstimatedUsdcValue: 0,\n            UserMush: 0,\n            UserUsdc: 0\n        };\n\n        this.Update = this.Update.bind(this);\n        this.UpdateWaitingOnContract = this.UpdateWaitingOnContract.bind(this);\n        this.updateContractStats = this.updateContractStats.bind(this);\n        //go fetch data from chain\n        this.updateContractStats();\n    }\n    /*\n    moved this here because we need to call it when invest or liquidate calls the update function, and having\n    something that calls setstate in a render method causes infinite recursion slowly\n    */\n\n    async updateContractStats() {\n\n        var accounts;\n\n        try {\n            await web3.eth.getAccounts().then(function (acc) {\n                accounts = acc\n            })\n\n            let total_mush = await Mushroom.methods.totalSupply().call();\n            let user_mush = await Mushroom.methods.balanceOf(accounts[0]).call();\n\n            let est_value = await Mushroom.methods.viewEstValue().call();\n\n            let total_usdc = await Rome.methods.balanceOf(Mushroom.options.address).call();\n            let user_usdc = await Rome.methods.balanceOf(accounts[0]).call();\n\n            total_mush = web3.utils.fromWei(total_mush, 'ether');\n            user_mush = web3.utils.fromWei(user_mush, 'ether');\n            est_value = web3.utils.fromWei(est_value, 'ether');\n            total_usdc = web3.utils.fromWei(total_usdc, 'ether');\n            user_usdc = web3.utils.fromWei(user_usdc, 'ether');\n\n\n            this.setState({\n                TotalMush: total_mush,\n                UserMush: user_mush,\n                TotalUsdc: total_usdc,\n                UserUsdc: user_usdc,\n                EstimatedUsdcValue: est_value\n            });\n\n\n        }\n        catch (err) {\n            console.log(\"ERROR IN SENDING TO CHAIN \" + err);\n            this.setState({\n            });\n        }\n    }\n\n    Update() {\n        this.updateContractStats();\n        this.forceUpdate();\n        console.log(\"I got called!\");\n    }\n\n    UpdateWaitingOnContract(bool) {\n        this.setState({\n            waitingOnContract: bool\n        });\n    }\n\n    render() {\n        return (\n            //set mushroom forest background, make it fill screen\n            <div className=\"App\" style={{\n                backgroundImage: `url(${statue})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }}>\n                <header className=\"App-header\" style={{\n                    backgroundColor: 'transparent'\n                }}>\n                    <br/><br/><br/><br/>\n                    <h1 style={radiantWhite}> {/* neat white text with blue fading outline */}\n                        Welcome to Rome Finance\n                    </h1>\n                    <br/><br/><br/><br/><br/> {/*Tons of new lines*/}\n                    <Dashboard TotalMush={this.state.TotalMush} UserMush={this.state.UserMush}\n                               TotalUsdc={this.state.TotalUsdc} UserUsdc={this.state.UserUsdc}\n                               EstimatedUsdcValue={this.state.EstimatedUsdcValue}\n                    /> {/* render dashboard child component from dashboard.js */}\n                    <br/><br/>\n                </header>\n                {/*\n                     Uses bootstrap cols and rows to make everything all nice and scalable\n                    */}\n                <Container>\n                    <Row>\n                        <Col sm>\n                            <Invest Update={this.Update} waitingOnContract={this.state.waitingOnContract} UpdateWaitingOnContract={this.UpdateWaitingOnContract} /> {/* render invest child component from invest.js */}\n                        </Col>\n                        <Col sm>\n                            <Liquidate Update={this.Update} waitingOnContract={this.state.waitingOnContract} UpdateWaitingOnContract={this.UpdateWaitingOnContract}/> {/* render liquidate child component from liquidate.js */}\n                        </Col>\n                    </Row>\n                </Container>\n                <header className=\"App-header\" style={{\n                    backgroundColor: 'transparent'\n                }}>\n                    {/*\n                     Put all those good legal warning messages up\n                    */}\n                    <h3 style={radiantWhite}>\n                        All initial investments are subject to up to a 1 month holding period to account for slippage.\n                    </h3>\n                    <h3 style={radiantWhite}>\n                        Prices may fluctuate, and Mushroom Capital is not responsible for temporary or permanent loss of\n                        funds.\n                    </h3>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Landing;","/home/darkdark/block_projs/Test-Ground/test_interface/src/components/Navigation.js",[],"/home/darkdark/block_projs/Test-Ground/test_interface/src/Pools.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport web3 from \"./web3\";\r\nimport Invest from \"./components/Invest\";\r\nimport Liquidate from \"./components/Liquidate\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card, Form} from \"semantic-ui-react\";\r\nimport {Component, React, Text} from \"react\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Mushroom from \"./Mushroom\";\r\nimport Rome from \"./Rome\";\r\nimport { flexbox } from '@material-ui/system';\r\nimport Box from '@material-ui/core/Box';\r\nimport pools from './resources/pools.jpg';\r\n\r\n\r\n//here and not in style sheet because css doesnt like text-shadow 33cd0c 35FFEC\r\nconst radiantWhite = {color: 'white', margin: 0, 'text-shadow': '0px 0px 2px #35FFEC'}\r\n\r\n\r\nclass Pools extends Component{\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //set mushroom forest background, make it fill screen\r\n\r\n            <header className=\"Pool-header\">\r\n                <br/><br/><br/><br/>\r\n                <h1 style={radiantWhite}> {/* neat white text with blue fading outline */}\r\n                    Welcome to Rome Finance\r\n                    <br/>\r\n                    Join the Empire\r\n                </h1>\r\n            </header>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pools;\r\n\r\n\r\n/*\r\nstyle={ {\r\n                    backgroundImage: `url(${pools})`,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'contain, cover',\r\n                    backgroundRepeat: 'no-repeat'\r\n                }}\r\n */","/home/darkdark/block_projs/Test-Ground/test_interface/src/Mushroom.js",[],{"ruleId":"112","severity":1,"message":"113","line":8,"column":10,"nodeType":"114","messageId":"115","endLine":8,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":8,"column":16,"nodeType":"114","messageId":"115","endLine":8,"endColumn":21},{"ruleId":"112","severity":1,"message":"117","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":18},{"ruleId":"112","severity":1,"message":"118","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":12},{"ruleId":"112","severity":1,"message":"119","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"120","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":17},{"ruleId":"112","severity":1,"message":"122","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":11},{"ruleId":"112","severity":1,"message":"123","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"124","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":11},{"ruleId":"112","severity":1,"message":"125","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":10,"column":15,"nodeType":"114","messageId":"115","endLine":10,"endColumn":19},{"ruleId":"112","severity":1,"message":"127","line":11,"column":27,"nodeType":"114","messageId":"115","endLine":11,"endColumn":31},{"ruleId":"112","severity":1,"message":"128","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":17},{"ruleId":"112","severity":1,"message":"129","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":16},{"ruleId":"112","severity":1,"message":"130","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":12},{"ruleId":"112","severity":1,"message":"131","line":15,"column":10,"nodeType":"114","messageId":"115","endLine":15,"endColumn":17},{"ruleId":"112","severity":1,"message":"132","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":11},{"ruleId":"133","severity":1,"message":"134","line":28,"column":5,"nodeType":"135","messageId":"136","endLine":30,"endColumn":6},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"112","severity":1,"message":"141","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"137","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"112","severity":1,"message":"130","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":12},{"ruleId":"112","severity":1,"message":"119","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":12},{"ruleId":"112","severity":1,"message":"125","line":3,"column":9,"nodeType":"114","messageId":"115","endLine":3,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":3,"column":15,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"112","severity":1,"message":"129","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":16},{"ruleId":"112","severity":1,"message":"130","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":12},{"ruleId":"112","severity":1,"message":"120","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":17},{"ruleId":"112","severity":1,"message":"117","line":17,"column":10,"nodeType":"114","messageId":"115","endLine":17,"endColumn":18},{"ruleId":"112","severity":1,"message":"125","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":10,"column":15,"nodeType":"114","messageId":"115","endLine":10,"endColumn":19},{"ruleId":"112","severity":1,"message":"127","line":11,"column":27,"nodeType":"114","messageId":"115","endLine":11,"endColumn":31},{"ruleId":"112","severity":1,"message":"131","line":15,"column":10,"nodeType":"114","messageId":"115","endLine":15,"endColumn":17},{"ruleId":"112","severity":1,"message":"132","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":11},{"ruleId":"112","severity":1,"message":"118","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":12},{"ruleId":"112","severity":1,"message":"119","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":12},{"ruleId":"112","severity":1,"message":"120","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":17},{"ruleId":"112","severity":1,"message":"122","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":11},{"ruleId":"112","severity":1,"message":"123","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"124","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":11},{"ruleId":"112","severity":1,"message":"125","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":10,"column":15,"nodeType":"114","messageId":"115","endLine":10,"endColumn":19},{"ruleId":"112","severity":1,"message":"127","line":11,"column":27,"nodeType":"114","messageId":"115","endLine":11,"endColumn":31},{"ruleId":"112","severity":1,"message":"128","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":17},{"ruleId":"112","severity":1,"message":"129","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":16},{"ruleId":"112","severity":1,"message":"130","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":12},{"ruleId":"112","severity":1,"message":"131","line":15,"column":10,"nodeType":"114","messageId":"115","endLine":15,"endColumn":17},{"ruleId":"112","severity":1,"message":"132","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":11},{"ruleId":"112","severity":1,"message":"144","line":17,"column":8,"nodeType":"114","messageId":"115","endLine":17,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":28,"column":5,"nodeType":"135","messageId":"136","endLine":30,"endColumn":6},"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'callBack' is defined but never used.","'logo' is defined but never used.","'web3' is defined but never used.","'Invest' is defined but never used.","'Liquidate' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Text' is defined but never used.","'Dashboard' is defined but never used.","'Mushroom' is defined but never used.","'Rome' is defined but never used.","'flexbox' is defined but never used.","'Box' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'Navigation' is defined but never used.",["145"],["146"],"'pools' is defined but never used.","no-global-assign","no-unsafe-negation"]